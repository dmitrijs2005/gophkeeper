syntax = "proto3";

option go_package = "github.com/dmitrijs2005/gophkeeper/internal/grpc/proto";

package gophkeeper.service;

message RegisterUserRequest {
  string username = 1;
  bytes salt = 2;
  bytes verifier = 3;
}

message RegisterUserResponse {
  string username = 1;
}

message GetSaltRequest {
  string username = 1;
}

message GetSaltResponse {
  bytes salt = 1;
}

message LoginRequest {
  string username = 1;
  bytes verifier_candidate = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message PingRequest {
}

message PingResponse {
  string status = 1;
}

message Entry {
  string id = 1;
  int64 version = 2;
  bytes overview = 3;
  bytes nonce_overview = 4;
  bytes details = 5;
  bytes nonce_details = 6;
  bool deleted = 7;
}

message SyncRequest {
  int64 max_version = 1;
  repeated Entry entries = 2;
}

message SyncResponse {
  int64 global_max_version = 1;
  repeated Entry processed_entries = 2;
  repeated Entry new_entries = 3;
}

service GophKeeperService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc GetSalt(GetSaltRequest) returns (GetSaltResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Ping(PingRequest) returns (PingResponse);
  rpc Sync(SyncRequest) returns (SyncResponse);
}
